import logging
from telegram.ext import (
    ApplicationBuilder, CommandHandler, ConversationHandler, MessageHandler, filters, CallbackQueryHandler
)
from config import BOT_TOKEN
from database import init_db
from handlers import (
    State, start, add_task_handler, receive_task_name, delete_task_handler, receive_task_number_for_deletion,
    list_tasks_handler, help_handler, start_session_handler, receive_task_number_for_session,
    stop_session_handler, active_session_handler, stats_handler, handle_stats_selection, handler_task_number_stat,
    menu_handler, back_menu_handler)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
init_db()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
if __name__ == '__main__':
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç Application –∏ –ø–µ—Ä–µ–¥–∞–µ–º –µ–º—É —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
    application = ApplicationBuilder().token(BOT_TOKEN).build()

    # ConversationHandler –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏
    add_task_conv = ConversationHandler(
        entry_points=[CallbackQueryHandler(add_task_handler, pattern='add_task'),
    ],
    states={
        State.WAITING_FOR_TASK_NAME: [
            MessageHandler(filters.TEXT & ~filters.COMMAND, receive_task_name),
        ],
    },
    fallbacks=[],
    )

    # ConversationHandler –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏
    delete_task_conv = ConversationHandler(
        entry_points=[CallbackQueryHandler(delete_task_handler, pattern='delete_task')
        ],
        states={
            State.WAITING_FOR_TASK_NUMBER: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, receive_task_number_for_deletion)],
        },
        fallbacks=[]
    )

    # ConversationHandler –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Å—Å–∏–∏
    start_session_conv = ConversationHandler(
        entry_points=[MessageHandler(filters.Text('‚ñ∂Ô∏è'), start_session_handler)],
        states={
            State.WAITING_FOR_TASK_NUMBER: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, receive_task_number_for_session)],
        },
        fallbacks=[]
    )

    # ConversationHandler –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –∑–∞–¥–∞—á–µ
    stats_task_conv = ConversationHandler(
        entry_points=[CallbackQueryHandler(handle_stats_selection, pattern='^total_stat_task_7$')],
        states={
            State.WAITING_FOR_TASK_NUMBER: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, handler_task_number_stat)],
        },
        fallbacks=[],
        name='stats_task_conv',  # –ò–º—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        persistent=False,  # –°–æ—Ö—Ä–∞–Ω—è—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–º–∏
    )

    logging.info(f'ConversationHandler stats_task_conv –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.')

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(stats_task_conv)
    application.add_handler(CommandHandler('start', start))
    application.add_handler(add_task_conv)
    application.add_handler(delete_task_conv)
    application.add_handler(CallbackQueryHandler(list_tasks_handler, pattern='list_tasks'))
    application.add_handler(CommandHandler('help', help_handler))
    application.add_handler(start_session_conv)
    application.add_handler(CallbackQueryHandler(stats_handler, pattern='stats'))
    application.add_handler(CallbackQueryHandler(back_menu_handler, pattern='back_menu'))
    application.add_handler(MessageHandler(filters.Text('‚èπÔ∏è'), stop_session_handler))
    application.add_handler(MessageHandler(filters.Text('üîÑ'), active_session_handler))
    application.add_handler(MessageHandler(filters.Text('‚öôÔ∏è'), menu_handler))
    application.add_handler(CallbackQueryHandler(handle_stats_selection))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling()
